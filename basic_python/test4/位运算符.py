print(12 & 8)  #按位与，12的二进制表达为1100,8的二进制表达为1000，按位与取重复数字即1000也就是十进制的8.
print(12 | 8)  #按位或，12的二进制表达为1100,8的二进制表达为1000，按位或取或逻辑的数字即1100也就是十进制的12.
print(12 ^ 8)  #按位异或，12的二进制表达为1100,8的二进制表达为1000，同位上数字不一样则取1，即千位数同为1因此取0，百位数分别为1和0因此取1，因此结果数字为0100，十进制为4.
print(~12)
#12的二进制完整表达为00001100，按位取反即颠倒所有数字，取反后的结果为11110011，因为python使用补码表示法，完整二进制数字的第一位数表达数字的正负，正数的首位数为0，负数的首位数为1，因此按位取反后的11110011是一个负数。#
#python运用的是补码表示法中，早补码表示法中中，负数的补码表示为其正数的二进制表示取反再加1，所以直接的取反结果为11110011，因为是负数所以还要+1，即11110100，再转换为10进制之后就变成了-13.
print(12 << 2)  #左移运算符，即将12的二进制数1100左移两位，并在空白数位补0，结果为110000，运算结果为48.
print(12 >> 3)  #右移运算符，即将12的二进制数1100右移两位，并在空白数位补0，结果为0001，运算结果为1.
